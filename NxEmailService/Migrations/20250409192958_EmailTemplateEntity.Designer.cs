// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NxEmailService.DbContexts;

#nullable disable

namespace NxEmailService.Migrations
{
    [DbContext(typeof(NxEmailServiceDbContext))]
    [Migration("20250409192958_EmailTemplateEntity")]
    partial class EmailTemplateEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("email")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NxEmailService.DbEntities.EmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmailTemplateID"));

                    b.Property<DateTime>("CreatedOnUTC")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("timestamp(3) with time zone")
                        .HasDefaultValueSql("(NOW() AT TIME ZONE 'UTC')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("EmailTemplateID")
                        .HasName("PK_EmailTemplate_EmailTemplateID");

                    b.ToTable("EmailTemplate", "email");
                });

            modelBuilder.Entity("NxEmailService.Models.EmailHistory", b =>
                {
                    b.Property<int>("EmailHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmailHistoryID"));

                    b.Property<string>("Attachments")
                        .HasColumnType("text");

                    b.Property<string>("BCC")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("CC")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOnUTC")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("timestamp(3) with time zone")
                        .HasDefaultValueSql("(NOW() AT TIME ZONE 'UTC')");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("IsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("RelatedEntityId")
                        .HasMaxLength(68)
                        .HasColumnType("character varying(68)");

                    b.Property<string>("RelatedEntityName")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Template")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EmailHistoryID")
                        .HasName("PK_EmailHistory_EmailHistoryID");

                    b.ToTable("EmailHistory", "email");
                });
#pragma warning restore 612, 618
        }
    }
}
